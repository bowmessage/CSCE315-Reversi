# data file for the Fltk User Interface Designer (fluid)
version 1.0302 
header_name {.h} 
code_name {.cxx}
decl {\#include <FL/Fl_PNG_Image.H>} {public global
} 

decl {\#include <FL/fl_ask.H>} {public global
} 

decl {\#include "Game.h"} {public global
} 

class ReversiUI {open
} {
  decl {Game* g;} {public local
  }
  decl {Server serv;} {public local
  }
  decl {Fl_PNG_Image* wImage;} {public local
  }
  decl {Fl_PNG_Image* bImage;} {public local
  }
  decl {int localGamePort;} {public local
  }
  decl {bool inGame;} {public local
  }
  Function {ReversiUI(Game* game)} {open
  } {
    Fl_Window window {
      label Reversi open
      xywh {964 206 430 510} type Double align 80 visible
    } {
      Fl_Group buttonGroup {
        xywh {10 30 410 415} box DOWN_BOX
      } {
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {20 40 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {70 40 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {120 40 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {170 40 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {220 40 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {270 40 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {320 40 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {370 40 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {20 90 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {70 90 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {120 90 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {170 90 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {220 90 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {270 90 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {320 90 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {370 90 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {20 140 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {70 140 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {120 140 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {170 140 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {220 140 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {270 140 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {320 140 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {370 140 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {20 190 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {70 190 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {120 190 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {170 190 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {220 190 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {270 190 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {320 190 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {370 190 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {20 240 40 45}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {70 240 40 45}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {120 240 40 45}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {170 240 40 45}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {220 240 40 45}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {270 240 40 45}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {320 240 40 45}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {370 240 40 45}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {20 295 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {70 295 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {120 295 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {170 295 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {220 295 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {270 295 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {320 295 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {370 295 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {20 345 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {70 345 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {120 345 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {170 345 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {220 345 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {270 345 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {320 345 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {370 345 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {20 395 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {70 395 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {120 395 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {170 395 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {220 395 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {270 395 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {320 395 40 40}
        }
        Fl_Button {} {
          callback {buttonPressed((int) v);}
          xywh {370 395 40 40}
        }
      }
      Fl_Menu_Bar {} {open
        xywh {0 0 800 20}
      } {
        Submenu {} {
          label Game open
          xywh {0 0 46 17}
        } {
          MenuItem {} {
            label {Human-AI}
            callback {humanAiWindow->show();}
            xywh {0 0 28 17}
          }
          MenuItem {} {
            label {AI-AI}
            callback {ipInputBox->value("127.0.0.1");
connectWindow->show();}
            xywh {0 0 28 17}
          }
          MenuItem {} {
            label Quit
            callback {if(fl_ask("Are you sure you want to quit Reversi?")){
	window->hide();
}}
            xywh {0 0 28 17}
          }
        }
      }
      Fl_Box winnerText {
        xywh {10 480 410 25} labelsize 20
      }
      Fl_Box whiteScore {
        label {White:}
        xywh {10 450 195 25} box DOWN_FRAME labelsize 20 align 20
      }
      Fl_Box blackScore {
        label {Black:}
        xywh {210 450 210 25} box DOWN_FRAME labelsize 20 align 24
      }
    }
    Fl_Window connectWindow {
      label {New AI-AI Game} open
      xywh {1229 186 340 120} type Double align 80 visible
    } {
      Fl_Input ipInputBox {
        label IP
        xywh {110 9 145 21}
      }
      Fl_Input portInputBox {
        label Port
        xywh {110 39 145 21}
      }
      Fl_Button {} {
        label Connect
        callback {connectWindow->hide();
startRemoteGame(string(ipInputBox->value()),atoi(portInputBox->value()), myDiffChoice->value(), theirDiffChoice->value());}
        xywh {265 10 65 20}
      }
      Fl_Return_Button {} {
        label Cancel
        callback {connectWindow->hide();}
        xywh {265 40 65 20}
      }
      Fl_Choice myDiffChoice {
        label {My Difficulty}
        xywh {110 64 145 21} down_box BORDER_BOX
      } {
        MenuItem {} {
          label EASY
          xywh {0 0 28 17}
        }
        MenuItem {} {
          label MEDIUM
          xywh {10 10 28 17}
        }
        MenuItem {} {
          label HARD
          xywh {20 20 28 17}
        }
      }
      Fl_Choice theirDiffChoice {
        label {Their Difficulty}
        xywh {110 90 145 20} down_box BORDER_BOX
      } {
        MenuItem {} {
          label EASY
          xywh {10 10 28 17}
        }
        MenuItem {} {
          label MEDIUM
          xywh {20 20 28 17}
        }
        MenuItem {} {
          label HARD
          xywh {30 30 28 17}
        }
      }
    }
    Fl_Window humanAiWindow {
      label {New Human-AI Game} open
      xywh {1229 345 340 75} type Double visible
    } {
      Fl_Button {} {
        label Connect
        callback {humanAiWindow->hide();
startLocalGame(aiDiffChoice->value());}
        xywh {265 15 65 20}
      }
      Fl_Return_Button {} {
        label Cancel
        callback {humanAiWindow->hide();}
        xywh {265 45 65 20}
      }
      Fl_Choice aiDiffChoice {
        label {AI Difficulty} open
        xywh {110 14 145 21} down_box BORDER_BOX
      } {
        MenuItem {} {
          label EASY
          xywh {10 10 28 17}
        }
        MenuItem {} {
          label MEDIUM
          xywh {20 20 28 17}
        }
        MenuItem {} {
          label HARD
          xywh {30 30 28 17}
        }
      }
    }
    code {g = game;
connectWindow->hide();} {}
  }
  Function {show(int portNum)} {open
  } {
    code {localGamePort = portNum;
inGame = false;

wImage = new Fl_PNG_Image("whitepiece.png");
bImage = new Fl_PNG_Image("blackpiece.png");

int numChildren = buttonGroup->children();
for(int i = 0; i < numChildren; i++){
	buttonGroup->child(i)->user_data((void*)i);
}
window->show();//argc, argv);} {}
  }
  Function {updateUI()} {open return_type void
  } {
    code {if(g->winner != 0){
	if(g->winner == 1){
		winnerText->label("White won!");
	}
	else if(g->winner == 2){
		winnerText->label("Black won!");
	}
	else if(g->winner == 3){
		winnerText->label("It was a tie!");
	}
}

Board b = g->board;

int numWhite = 0;
int numBlack = 0;


for(int i = 0; i < 8; i++){
	for(int j = 0; j < 8; j++){
		State s = b.getState(i,j);
		Fl_PNG_Image* imgPtr = NULL;
		switch(s){
			case WHITE:
				imgPtr = wImage;
				numWhite++;
			break;
			case BLACK:
				imgPtr = bImage;
				numBlack++;
			break;
			default:
				imgPtr = NULL;
			break;
		}
		//buttonGroup->child(j*8 + i)->copy_label(val.c_str());
		if(imgPtr != NULL){
			buttonGroup->child(j*8 + i)->image(imgPtr);
		}
		else{
			buttonGroup->child(j*8 + i)->deimage();
		}
		buttonGroup->child(j*8 + i)->redraw();
		
	}
}

stringstream ssWhite;
stringstream ssBlack;
ssWhite << "White: " << numWhite;
ssBlack << "Black: " << numBlack;
whiteScore->copy_label(ssWhite.str().c_str());
blackScore->copy_label(ssBlack.str().c_str());
whiteScore->redraw();
blackScore->redraw();} {selected
    }
  }
  Function {~ReversiUI()} {open
  } {
    code {delete bImage;
delete wImage;} {}
  }
  Function {startLocalGame(int difficulty)} {open
  } {
    code {inGame = true;
serv.connectTo("127.0.0.1", localGamePort);
serv.readStringFromOtherAi();
string diffStr = "EASY";
switch(difficulty){
	case 0:
		diffStr = "EASY";
	break;
	case 1:
		diffStr = "MEDIUM";
	break;
	case 2:
		diffStr = "HARD";
	break;
}
serv.sendStringToOtherAi(diffStr);
serv.readStringFromOtherAi();
usleep(100000);
serv.sendStringToOtherAi("HUMAN-AI");
serv.readStringFromOtherAi();} {}
  }
  Function {startRemoteGame(string ipVal, int portVal, int myDiff, int theirDiff)} {open
  } {
    code {inGame = true;
serv.connectTo("127.0.0.1", localGamePort);
serv.readStringFromOtherAi();
stringstream ss;
//0=easy, 2=hard
string myDiffStr = "easy";
string theirDiffStr = "easy";
if(myDiff == 1) myDiffStr = "medium";
else if(myDiff == 2) myDiffStr = "hard";
if(theirDiff == 1) theirDiffStr = "medium";
else if(theirDiff == 2) theirDiffStr = "hard";
ss << "AI-AI " << ipVal << " " << portVal << " " << myDiffStr << " " << theirDiffStr;
serv.sendStringToOtherAi(ss.str());
serv.readStringFromOtherAi();} {}
  }
  Function {buttonPressed(int buttonNum)} {open
  } {
    code {if(inGame){
int x = buttonNum % 8;
int y = buttonNum / 8;
int r = y + 49;
int c = x + 65;
stringstream ss;
ss << (char)c << (char)r;
serv.sendStringToOtherAi(ss.str());
}
else{
	fl_alert("Please start a game using the Game menu above.");
}} {}
  }
} 
