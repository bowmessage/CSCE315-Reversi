// generated by Fast Light User Interface Designer (fluid) version 1.0302

#ifndef reversi_h
#define reversi_h
#include <FL/Fl.H>
#include <FL/Fl_PNG_Image.H>
#include <FL/fl_ask.H>
#include "Game.h"
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Menu_Bar.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Return_Button.H>
#include <FL/Fl_Choice.H>

class ReversiUI {
public:
  Game* g; 
  Server serv; 
  Fl_PNG_Image* wImage; 
  Fl_PNG_Image* bImage; 
  int localGamePort; 
  bool inGame; 
  ReversiUI(Game* game);
  Fl_Double_Window *window;
  Fl_Group *buttonGroup;
private:
  inline void cb__i(Fl_Button*, void*);
  static void cb_(Fl_Button*, void*);
  inline void cb_1_i(Fl_Button*, void*);
  static void cb_1(Fl_Button*, void*);
  inline void cb_2_i(Fl_Button*, void*);
  static void cb_2(Fl_Button*, void*);
  inline void cb_3_i(Fl_Button*, void*);
  static void cb_3(Fl_Button*, void*);
  inline void cb_4_i(Fl_Button*, void*);
  static void cb_4(Fl_Button*, void*);
  inline void cb_5_i(Fl_Button*, void*);
  static void cb_5(Fl_Button*, void*);
  inline void cb_6_i(Fl_Button*, void*);
  static void cb_6(Fl_Button*, void*);
  inline void cb_7_i(Fl_Button*, void*);
  static void cb_7(Fl_Button*, void*);
  inline void cb_8_i(Fl_Button*, void*);
  static void cb_8(Fl_Button*, void*);
  inline void cb_9_i(Fl_Button*, void*);
  static void cb_9(Fl_Button*, void*);
  inline void cb_a_i(Fl_Button*, void*);
  static void cb_a(Fl_Button*, void*);
  inline void cb_b_i(Fl_Button*, void*);
  static void cb_b(Fl_Button*, void*);
  inline void cb_c_i(Fl_Button*, void*);
  static void cb_c(Fl_Button*, void*);
  inline void cb_d_i(Fl_Button*, void*);
  static void cb_d(Fl_Button*, void*);
  inline void cb_e_i(Fl_Button*, void*);
  static void cb_e(Fl_Button*, void*);
  inline void cb_f_i(Fl_Button*, void*);
  static void cb_f(Fl_Button*, void*);
  inline void cb_10_i(Fl_Button*, void*);
  static void cb_10(Fl_Button*, void*);
  inline void cb_11_i(Fl_Button*, void*);
  static void cb_11(Fl_Button*, void*);
  inline void cb_12_i(Fl_Button*, void*);
  static void cb_12(Fl_Button*, void*);
  inline void cb_13_i(Fl_Button*, void*);
  static void cb_13(Fl_Button*, void*);
  inline void cb_14_i(Fl_Button*, void*);
  static void cb_14(Fl_Button*, void*);
  inline void cb_15_i(Fl_Button*, void*);
  static void cb_15(Fl_Button*, void*);
  inline void cb_16_i(Fl_Button*, void*);
  static void cb_16(Fl_Button*, void*);
  inline void cb_17_i(Fl_Button*, void*);
  static void cb_17(Fl_Button*, void*);
  inline void cb_18_i(Fl_Button*, void*);
  static void cb_18(Fl_Button*, void*);
  inline void cb_19_i(Fl_Button*, void*);
  static void cb_19(Fl_Button*, void*);
  inline void cb_1a_i(Fl_Button*, void*);
  static void cb_1a(Fl_Button*, void*);
  inline void cb_1b_i(Fl_Button*, void*);
  static void cb_1b(Fl_Button*, void*);
  inline void cb_1c_i(Fl_Button*, void*);
  static void cb_1c(Fl_Button*, void*);
  inline void cb_1d_i(Fl_Button*, void*);
  static void cb_1d(Fl_Button*, void*);
  inline void cb_1e_i(Fl_Button*, void*);
  static void cb_1e(Fl_Button*, void*);
  inline void cb_1f_i(Fl_Button*, void*);
  static void cb_1f(Fl_Button*, void*);
  inline void cb_20_i(Fl_Button*, void*);
  static void cb_20(Fl_Button*, void*);
  inline void cb_21_i(Fl_Button*, void*);
  static void cb_21(Fl_Button*, void*);
  inline void cb_22_i(Fl_Button*, void*);
  static void cb_22(Fl_Button*, void*);
  inline void cb_23_i(Fl_Button*, void*);
  static void cb_23(Fl_Button*, void*);
  inline void cb_24_i(Fl_Button*, void*);
  static void cb_24(Fl_Button*, void*);
  inline void cb_25_i(Fl_Button*, void*);
  static void cb_25(Fl_Button*, void*);
  inline void cb_26_i(Fl_Button*, void*);
  static void cb_26(Fl_Button*, void*);
  inline void cb_27_i(Fl_Button*, void*);
  static void cb_27(Fl_Button*, void*);
  inline void cb_28_i(Fl_Button*, void*);
  static void cb_28(Fl_Button*, void*);
  inline void cb_29_i(Fl_Button*, void*);
  static void cb_29(Fl_Button*, void*);
  inline void cb_2a_i(Fl_Button*, void*);
  static void cb_2a(Fl_Button*, void*);
  inline void cb_2b_i(Fl_Button*, void*);
  static void cb_2b(Fl_Button*, void*);
  inline void cb_2c_i(Fl_Button*, void*);
  static void cb_2c(Fl_Button*, void*);
  inline void cb_2d_i(Fl_Button*, void*);
  static void cb_2d(Fl_Button*, void*);
  inline void cb_2e_i(Fl_Button*, void*);
  static void cb_2e(Fl_Button*, void*);
  inline void cb_2f_i(Fl_Button*, void*);
  static void cb_2f(Fl_Button*, void*);
  inline void cb_30_i(Fl_Button*, void*);
  static void cb_30(Fl_Button*, void*);
  inline void cb_31_i(Fl_Button*, void*);
  static void cb_31(Fl_Button*, void*);
  inline void cb_32_i(Fl_Button*, void*);
  static void cb_32(Fl_Button*, void*);
  inline void cb_33_i(Fl_Button*, void*);
  static void cb_33(Fl_Button*, void*);
  inline void cb_34_i(Fl_Button*, void*);
  static void cb_34(Fl_Button*, void*);
  inline void cb_35_i(Fl_Button*, void*);
  static void cb_35(Fl_Button*, void*);
  inline void cb_36_i(Fl_Button*, void*);
  static void cb_36(Fl_Button*, void*);
  inline void cb_37_i(Fl_Button*, void*);
  static void cb_37(Fl_Button*, void*);
  inline void cb_38_i(Fl_Button*, void*);
  static void cb_38(Fl_Button*, void*);
  inline void cb_39_i(Fl_Button*, void*);
  static void cb_39(Fl_Button*, void*);
  inline void cb_3a_i(Fl_Button*, void*);
  static void cb_3a(Fl_Button*, void*);
  inline void cb_3b_i(Fl_Button*, void*);
  static void cb_3b(Fl_Button*, void*);
  inline void cb_3c_i(Fl_Button*, void*);
  static void cb_3c(Fl_Button*, void*);
  inline void cb_3d_i(Fl_Button*, void*);
  static void cb_3d(Fl_Button*, void*);
  inline void cb_3e_i(Fl_Button*, void*);
  static void cb_3e(Fl_Button*, void*);
  inline void cb_3f_i(Fl_Button*, void*);
  static void cb_3f(Fl_Button*, void*);
  static Fl_Menu_Item menu_[];
  inline void cb_Human_i(Fl_Menu_*, void*);
  static void cb_Human(Fl_Menu_*, void*);
  inline void cb_AI_i(Fl_Menu_*, void*);
  static void cb_AI(Fl_Menu_*, void*);
  inline void cb_Quit_i(Fl_Menu_*, void*);
  static void cb_Quit(Fl_Menu_*, void*);
public:
  Fl_Box *winnerText;
  Fl_Box *whiteScore;
  Fl_Box *blackScore;
  Fl_Double_Window *connectWindow;
  Fl_Input *ipInputBox;
  Fl_Input *portInputBox;
private:
  inline void cb_Connect_i(Fl_Button*, void*);
  static void cb_Connect(Fl_Button*, void*);
  inline void cb_Cancel_i(Fl_Return_Button*, void*);
  static void cb_Cancel(Fl_Return_Button*, void*);
public:
  Fl_Choice *myDiffChoice;
  static Fl_Menu_Item menu_myDiffChoice[];
  Fl_Choice *theirDiffChoice;
  static Fl_Menu_Item menu_theirDiffChoice[];
  Fl_Double_Window *humanAiWindow;
private:
  inline void cb_Connect1_i(Fl_Button*, void*);
  static void cb_Connect1(Fl_Button*, void*);
  inline void cb_Cancel1_i(Fl_Return_Button*, void*);
  static void cb_Cancel1(Fl_Return_Button*, void*);
public:
  Fl_Choice *aiDiffChoice;
  static Fl_Menu_Item menu_aiDiffChoice[];
  void show(int portNum);
  void updateUI();
  ~ReversiUI();
  void startLocalGame(int difficulty);
  void startRemoteGame(string ipVal, int portVal, int myDiff, int theirDiff);
  void buttonPressed(int buttonNum);
};
#endif
